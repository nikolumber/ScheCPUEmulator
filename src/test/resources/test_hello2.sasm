; OUTW 2 1
LOAD B 0 ; Logs aktivieren
LOAD A 50 ; Wie oft?
STOREMEM 5 0 ; Wir schauen wie oft wir es schon ausgegeben haben
FUNC call
CMPM A 5 ; schauen wie oft wir es schon ausgegeben haben
CJMP helloWorld ; okay, noch einmal ausgeben
JMP end ; wir sind fertig


FUNC helloWorld
; H
OUTW 34 72
; e
OUTW 34 101
; l
OUTW 34 108
; l
OUTW 34 108
; o
OUTW 34 111
; space
OUTW 34 32
; w
OUTW 34 119
; o
OUTW 34 111
; r
OUTW 34 114
; l
OUTW 34 108
; d
OUTW 34 100
; !
OUTW 34 33
; newline
OUTW 34 10
; add 1 to counter in mem at addr 5
ADDM 5 1


CMPM B 0
CZJMP skip_pr ; skip if disabled
; dump registers and memory
OUTW 1 1

FUNC skip_pr
; jump back to call
JMP call

FUNC end


; Print every char
; OUTW 2 1

STOREMEM 30 0
STOREMEM 31 254
FUNC prGo

OUTWM 34 30

ADDM 30 1
CMPMEM 31 30
CJMP prGo

OUTW 34 10 ; newline
OUTW 1 1